apiVersion: 1

groups:
  - orgId: 1
    name: Presets
    folder: Presets
    interval: 60s
    rules:
      - uid: no-data
        title: No data
        condition: B
        data:
        - refId: A
          queryType: ''
          relativeTimeRange:
            from: 86400
            to: 0
          datasourceUid: 'influxdb'
          model:
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            query: "import \"system\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n|> range(start:
              v.timeRangeStart, stop: v.timeRangeStop)\r\n|> last()\r\n|> map(fn: (r) => ({
              r with _value: (uint(v: system.time()) - uint(v: r._time)) / uint(v: 1000000000)
              }))"
            refId: A
        - refId: B
          queryType: ''
          relativeTimeRange:
            from: 0
            to: 0
          datasourceUid: "-100"
          model:
            conditions:
            - evaluator:
                params:
                - 1800
                type: gt
              operator:
                type: and
              query:
                params:
                - A
              reducer:
                params: []
                type: last
              type: query
            datasource:
              type: __expr__
              uid: "-100"
            expression: A
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            refId: B
            type: classic_conditions
        noDataState: NoData
        execErrState: Alerting
        for: 1m
        annotations:
          summary: Device has not sent any sensor data in a long time.
          description: Device '{{ $value | reReplaceAll `.*metric='(.*)'.*` "$1" }}' has not sent a sensor value '{{ $value | reReplaceAll `.*sensor=(.*), .*` "$1" }}' in **{{ $value | reReplaceAll `.*value=(.*) \]` "$1" }} seconds**.
        labels:
          device: '{{ $$value | reReplaceAll `.*metric=''(.*)''.*` "$$1" }}'
      - uid: co2
        title: CO2
        condition: B
        data:
        - refId: A
          queryType: ''
          relativeTimeRange:
            from: 86400
            to: 0
          datasourceUid: 'influxdb'
          model:
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            query: "import \"strings\"\r\n 
              from(bucket: v.defaultBucket)\r\n 
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n
              |> last()\r\n
              |> filter(fn: (r) => strings.containsStr(v: r[\"sensor\"], substr: \"CO2\"))"
            refId: A
        - refId: B
          queryType: ''
          relativeTimeRange:
            from: 0
            to: 0
          datasourceUid: "-100"
          model:
            conditions:
            - evaluator:
                params:
                - 1
                - 2000
                type: outside_range
              operator:
                type: and
              query:
                params:
                - A
              reducer:
                params: []
                type: last
              type: query
            datasource:
              type: __expr__
              uid: "-100"
            expression: A
            hide: false
            intervalMs: 1000
            maxDataPoints: 43200
            refId: B
            type: classic_conditions
        noDataState: NoData
        execErrState: Alerting
        for: 5m
        annotations:
          summary: Device has reported high CO2 levels.
          description: Device '{{ $value | reReplaceAll `.*metric='(.*)'.*` "$1" }}' has reported a CO2 value of **{{ $value | reReplaceAll `.*value=(.*) \]` "$1" }} ppm**.
        labels:
          device: '{{ $$value | reReplaceAll `.*metric=''(.*)''.*` "$$1" }}'
      - uid: open-window
        title: "Open Window"
        condition: B
        data:
          - refId: Min
            relativeTimeRange:
              from: 43200
              to: 0
            datasourceUid: influxdb
            model:
              hide: false
              intervalMs: 1000
              maxDataPoints: 43200
              query: "from(bucket: v.defaultBucket)\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r[\"sensor\"] == \"CO2 in ppm\")\r\n|> min()"
              refId: Min
          - refId: Last Min
            relativeTimeRange:
              from: 43200
              to: 0
            datasourceUid: __expr__
            model:
              conditions:
                  - evaluator:
                      params:
                          - 0
                          - 0
                      type: gt
                    operator:
                      type: and
                    query:
                      params: []
                    reducer:
                      params: []
                      type: avg
                    type: query
              datasource:
                  name: Expression
                  type: __expr__
                  uid: __expr__
              expression: Min
              intervalMs: 1000
              maxDataPoints: 43200
              reducer: last
              refId: Last Min
              type: reduce
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                  - evaluator:
                      params:
                          - 600
                          - 0
                      type: gt
                    operator:
                      type: and
                    query:
                      params: []
                    reducer:
                      params: []
                      type: avg
                    type: query
              datasource:
                  name: Expression
                  type: __expr__
                  uid: __expr__
              expression: Last Min
              intervalMs: 1000
              maxDataPoints: 43200
              refId: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 1m
        annotations:
          summary: Minimum CO2 of last time is too high
          description: Device '{{ $labels.device }}' has reported a minimum CO2 value of **{{ index $values "Last Min" }} ppm** in the last 12 hours, open a window.
        isPaused: false